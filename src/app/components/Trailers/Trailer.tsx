import { useQuery } from "@tanstack/react-query";
import axios from "axios";
import Link from "next/link";

// Generated by https://quicktype.io

export interface TrailerData {
  id: number;
  results: Result[];
}

export interface Result {
  iso_639_1: ISO639_1;
  iso_3166_1: ISO3166_1;
  name: string;
  key: string;
  site: Site;
  size: number;
  type: string;
  official: boolean;
  published_at: string;
  id: string;
}

export enum ISO3166_1 {
  Us = "US",
}

export enum ISO639_1 {
  En = "en",
}

export enum Site {
  YouTube = "YouTube",
}

const Trailer = ({ id }: { id: number }) => {
  const options = {
    method: "GET",
    headers: {
      accept: "application/json",
      Authorization:process.env.NEXT_PUBLIC_MOVIE_KEY
    },
  };

  const { data, isLoading, isError } = useQuery(
    ["trailerData", id],
    async () => {
      const { data } = await axios.get(
        `https://api.themoviedb.org/3/movie/${id}/videos`,
        options
      );
      return data as TrailerData;
    },
    {
      enabled: !!id,
    }
  );

  if (isLoading) {
    return (
      <div className="flex justify-center items-center mx-auto">
        <h1 className="text-white text-4xl font-bold absolute inset-0 flex items-center justify-center">
          Loading...
        </h1>
      </div>
    );
  }

  if (isError) {
    return <h1 className="text-white">No hay Trailer</h1>;
  }

  const trailer = data?.results.find((result) => result.type === "Trailer");

  if (data?.results.length === 0) {
    return <h1 className="text-white">No hay Trailer</h1>;
  }

  if (trailer) {
    return (
      <div>
        
        <Link
          href={`https://www.youtube.com/watch?v=${trailer.key}`}
          passHref
          target="_blank"
        >
          View Trailer
        </Link>
      </div>
    );
  }

  return null;
};

export default Trailer;